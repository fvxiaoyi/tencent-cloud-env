name: 'Terraform'

on:
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Import GPG
      uses: crazy-max/ghaction-import-gpg@v5.2.0
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

    - name: Write kube config
      run: |
        echo "$MY_SECRET" >> k3s.yaml
      shell: bash
      env:
        MY_SECRET: ${{secrets.KUBE_CONFIG}}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -out terraform.plan

      # generate plain output
    - run: terraform show -no-color terraform.plan > terraform.text

      # generate json output
    - run: terraform show -json terraform.plan > terraform.json

    - run: ls

    - uses: ahmadnassri/action-terraform-report@v3
      with:
        # tell the action the plan outputs
        terraform-text: ${{ github.workspace }}/terraform.text
        terraform-json: ${{ github.workspace }}/terraform.json
        remove-stale-reports: true

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
#      run: terraform apply -auto-approve -input=false
